{
    "version": 3,
    "configurePresets": [
        {
            "name": "clang-20",
            "displayName": "Clang 20 Build",
            "description": "Build with Clang 20 compiler",
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/clang-20",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-20",
                "CMAKE_CXX_COMPILER": "clang++-20",
                "CMAKE_BUILD_TYPE": "RelWithDebInfo",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
            },
            "environment": {
                "CC": "clang-20",
                "CXX": "clang++-20"
            }
        },
        {
            "name": "clang-20-debug",
            "displayName": "Clang 20 Debug",
            "description": "Debug build with Clang 20 compiler",
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/clang-20-debug",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-20",
                "CMAKE_CXX_COMPILER": "clang++-20",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
            },
            "environment": {
                "CC": "clang-20",
                "CXX": "clang++-20"
            }
        },
        {
            "name": "clang-20-release",
            "displayName": "Clang 20 Release",
            "description": "Release build with Clang 20 compiler",
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/clang-20-release",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-20",
                "CMAKE_CXX_COMPILER": "clang++-20",
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
            },
            "environment": {
                "CC": "clang-20",
                "CXX": "clang++-20"
            }
        },
        {
            "name": "gcc-default",
            "displayName": "Default GCC Build",
            "description": "Build with the distribution GCC compiler",
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/gcc-default",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "gcc",
                "CMAKE_CXX_COMPILER": "g++",
                "CMAKE_BUILD_TYPE": "RelWithDebInfo",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "CMAKE_CXX_FLAGS": "-march=native"
            },
            "environment": {
                "CC": "gcc",
                "CXX": "g++"
            }
        },
        {
            "name": "gcc-default-debug",
            "displayName": "Default GCC Build Debug",
            "description": "Debug build with the distribution GCC compiler",
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/gcc-default-debug",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "gcc",
                "CMAKE_CXX_COMPILER": "g++",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
            },
            "environment": {
                "CC": "gcc",
                "CXX": "g++"
            }
        },
        {
            "name": "clang-20-libcxx",
            "displayName": "Clang 20 with libc++",
            "description": "Build with Clang 20 compiler using libc++ standard library",
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/clang-20-libcxx",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-20",
                "CMAKE_CXX_COMPILER": "clang++-20",
                "CMAKE_BUILD_TYPE": "RelWithDebInfo",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-linux-libcxx",
                "VCPKG_OVERLAY_TRIPLETS": "${sourceDir}/triplets",
                "CMAKE_CXX_FLAGS": "-stdlib=libc++",
                "CMAKE_EXE_LINKER_FLAGS": "-stdlib=libc++ -lc++abi"
            },
            "environment": {
                "CC": "clang-20",
                "CXX": "clang++-20"
            }
        },
        {
            "name": "clang-20-libcxx-debug",
            "displayName": "Clang 20 Debug with libc++",
            "description": "Debug build with Clang 20 compiler using libc++ standard library",
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/clang-20-libcxx-debug",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-20",
                "CMAKE_CXX_COMPILER": "clang++-20",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-linux-libcxx",
                "VCPKG_OVERLAY_TRIPLETS": "${sourceDir}/triplets",
                "CMAKE_CXX_FLAGS": "-stdlib=libc++",
                "CMAKE_EXE_LINKER_FLAGS": "-stdlib=libc++ -lc++abi"
            },
            "environment": {
                "CC": "clang-20",
                "CXX": "clang++-20"
            }
        },
        {
            "name": "clang-20-libcxx-release",
            "displayName": "Clang 20 Release with libc++",
            "description": "Release build with Clang 20 compiler using libc++ standard library",
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/clang-20-libcxx-release",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-20",
                "CMAKE_CXX_COMPILER": "clang++-20",
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-linux-libcxx",
                "VCPKG_OVERLAY_TRIPLETS": "${sourceDir}/triplets",
                "CMAKE_CXX_FLAGS": "-stdlib=libc++",
                "CMAKE_EXE_LINKER_FLAGS": "-stdlib=libc++ -lc++abi"
            },
            "environment": {
                "CC": "clang-20",
                "CXX": "clang++-20"
            }
        },
        {
            "name": "msvc-2022",
            "displayName": "MSVC 2022 Build",
            "description": "Build with MSVC 2022 compiler",
            "generator": "Visual Studio 17 2022",
            "architecture": "x64",
            "binaryDir": "${sourceDir}/build/msvc-2022",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "RelWithDebInfo",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            }
        },
        {
            "name": "msvc-2022-debug",
            "displayName": "MSVC 2022 Debug",
            "description": "Debug build with MSVC 2022 compiler",
            "generator": "Visual Studio 17 2022",
            "architecture": "x64",
            "binaryDir": "${sourceDir}/build/msvc-2022-debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            }
        },
        {
            "name": "msvc-2022-release",
            "displayName": "MSVC 2022 Release",
            "description": "Release build with MSVC 2022 compiler",
            "generator": "Visual Studio 17 2022",
            "architecture": "x64",
            "binaryDir": "${sourceDir}/build/msvc-2022-release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            }
        },
        {
            "name": "msvc-ninja",
            "displayName": "MSVC with Ninja",
            "description": "Build with MSVC using Ninja generator",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/msvc-ninja",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "RelWithDebInfo",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            },
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            }
        },
        {
            "name": "msvc-ninja-debug",
            "displayName": "MSVC Debug with Ninja",
            "description": "Debug build with MSVC using Ninja generator",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/msvc-ninja-debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            },
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            }
        },
        {
            "name": "msvc-ninja-release",
            "displayName": "MSVC Release with Ninja",
            "description": "Release build with MSVC using Ninja generator",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/msvc-ninja-release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            },
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            }
        },
        {
            "name": "clang-cl",
            "displayName": "Clang-cl Build",
            "description": "Build with Clang-cl compiler (Clang with MSVC compatibility)",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/clang-cl",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-cl",
                "CMAKE_CXX_COMPILER": "clang-cl",
                "CMAKE_BUILD_TYPE": "RelWithDebInfo",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            },
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            }
        },
        {
            "name": "clang-cl-debug",
            "displayName": "Clang-cl Debug",
            "description": "Debug build with Clang-cl compiler",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/clang-cl-debug",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-cl",
                "CMAKE_CXX_COMPILER": "clang-cl",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            },
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            }
        },
        {
            "name": "clang-cl-release",
            "displayName": "Clang-cl Release",
            "description": "Release build with Clang-cl compiler",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/clang-cl-release",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang-cl",
                "CMAKE_CXX_COMPILER": "clang-cl",
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            },
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            }
        },
        {
            "name": "default",
            "displayName": "Default Build",
            "description": "Default build with system compiler",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "RelWithDebInfo",
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
            }
        }
    ],
    "buildPresets": [
        {
            "name": "clang-20",
            "configurePreset": "clang-20",
            "displayName": "Build with Clang 20"
        },
        {
            "name": "clang-20-debug",
            "configurePreset": "clang-20-debug",
            "displayName": "Debug Build with Clang 20"
        },
        {
            "name": "clang-20-release",
            "configurePreset": "clang-20-release",
            "displayName": "Release Build with Clang 20"
        },
        {
            "name": "gcc-default",
            "configurePreset": "gcc-default",
            "displayName": "Build with Default GCC"
        },
        {
            "name": "gcc-default-debug",
            "configurePreset": "gcc-default-debug",
            "displayName": "Debug Build with Default GCC"
        },
        {
            "name": "clang-20-libcxx",
            "configurePreset": "clang-20-libcxx",
            "displayName": "Build with Clang 20 + libc++"
        },
        {
            "name": "clang-20-libcxx-debug",
            "configurePreset": "clang-20-libcxx-debug",
            "displayName": "Debug Build with Clang 20 + libc++"
        },
        {
            "name": "clang-20-libcxx-release",
            "configurePreset": "clang-20-libcxx-release",
            "displayName": "Release Build with Clang 20 + libc++"
        },
        {
            "name": "msvc-2022",
            "configurePreset": "msvc-2022",
            "displayName": "Build with MSVC 2022"
        },
        {
            "name": "msvc-2022-debug",
            "configurePreset": "msvc-2022-debug",
            "displayName": "Debug Build with MSVC 2022"
        },
        {
            "name": "msvc-2022-release",
            "configurePreset": "msvc-2022-release",
            "displayName": "Release Build with MSVC 2022"
        },
        {
            "name": "msvc-ninja",
            "configurePreset": "msvc-ninja",
            "displayName": "Build with MSVC + Ninja"
        },
        {
            "name": "msvc-ninja-debug",
            "configurePreset": "msvc-ninja-debug",
            "displayName": "Debug Build with MSVC + Ninja"
        },
        {
            "name": "msvc-ninja-release",
            "configurePreset": "msvc-ninja-release",
            "displayName": "Release Build with MSVC + Ninja"
        },
        {
            "name": "clang-cl",
            "configurePreset": "clang-cl",
            "displayName": "Build with Clang-cl"
        },
        {
            "name": "clang-cl-debug",
            "configurePreset": "clang-cl-debug",
            "displayName": "Debug Build with Clang-cl"
        },
        {
            "name": "clang-cl-release",
            "configurePreset": "clang-cl-release",
            "displayName": "Release Build with Clang-cl"
        },
        {
            "name": "default",
            "configurePreset": "default",
            "displayName": "Default Build"
        }
    ],
    "testPresets": [
        {
            "name": "clang-20",
            "configurePreset": "clang-20",
            "displayName": "Test with Clang 20"
        },
        {
            "name": "gcc-default",
            "configurePreset": "gcc-default",
            "displayName": "Test with Default GCC"
        },
        {
            "name": "clang-20-libcxx",
            "configurePreset": "clang-20-libcxx",
            "displayName": "Test with Clang 20 + libc++"
        },
        {
            "name": "msvc-2022",
            "configurePreset": "msvc-2022",
            "displayName": "Test with MSVC 2022"
        },
        {
            "name": "msvc-2022-debug",
            "configurePreset": "msvc-2022-debug",
            "displayName": "Debug Test with MSVC 2022"
        },
        {
            "name": "msvc-ninja",
            "configurePreset": "msvc-ninja",
            "displayName": "Test with MSVC + Ninja"
        },
        {
            "name": "clang-cl",
            "configurePreset": "clang-cl",
            "displayName": "Test with Clang-cl"
        },
        {
            "name": "default",
            "configurePreset": "default",
            "displayName": "Default Test"
        }
    ]
}